{"version":3,"file":"preload.js","mappings":";;;;;;;;;;AAAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;;ACtBA,gEAAgE;AAChE,iDAAiD;;AAEjD,iEAAsD;AAEtD,wBAAa,CAAC,iBAAiB,CAAC,aAAa,EAAE;IAC9C,gBAAgB,EAAE,UAAC,QAAY;QAC9B,OAAO,sBAAW,CAAC,EAAE,CAAC,mBAAmB,EAAE,QAAQ,CAAC;IACrD,CAAC;IACD,aAAa,EAAE,UAAC,QAAa,IAAK,6BAAW,CAAC,EAAE,CAAC,iBAAiB,EAAE,QAAQ,CAAC,EAA3C,CAA2C;IAC7E,oCAAoC;IACpC,gDAAgD;IAChD,KAAK;CACL,CAAC","sources":["webpack://pixi-ts-electron-quickstart/external node-commonjs \"electron\"","webpack://pixi-ts-electron-quickstart/webpack/bootstrap","webpack://pixi-ts-electron-quickstart/./src/main/preload.ts"],"sourcesContent":["module.exports = require(\"electron\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// All of the Node.js APIs are available in the preload process.\n// It has the same sandbox as a Chrome extension.\n\nimport { contextBridge, ipcRenderer } from \"electron\";\n\ncontextBridge.exposeInMainWorld('electronAPI', {\n\thandleBackground: (callback:any) => {\n\t\treturn ipcRenderer.on('update-background', callback)\n\t},\n\tupdateSpriteX: (callback: any) => ipcRenderer.on('update-sprite-x', callback),\n\t// writeLEDStatus: (value: 1|0) => {\n\t// \tipcRenderer.invoke('write:LEDStatus', value)\n\t// },\n})"],"names":[],"sourceRoot":""}